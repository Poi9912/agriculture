{
  "openapi": "3.0.0",
  "info": {
      "title": "agriculture-api",
      "version": "1.0.0",
      "description": "agriculture app api description",
      "x-logo": {
          "url": ""
      }
  },
  "servers": [
      {
          "url": "{server}/api",
          "description": "",
          "variables": {
              "server": {
                  "enum": [
                      "http://localhost:3000",
                      "https://agriculture.jeuzportfolio.net"
                  ],
                  "default": "http://localhost:3000"
              }
          }
      }
  ],
  "paths": {
      "/monitoring": {
          "head": {
              "tags": [
                  "monitoring"
              ],
              "responses": {
                  "204": {
                      "description": "response from the monitoring endpoint"
                  }
              },
              "operationId": "monitoring"
          }
      },
      "/crops": {
          "summary": "manages crops",
          "get": {
              "tags": [
                  " farm",
                  " management"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "id of the item you want",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/cropsGetRes"
                              }
                          }
                      },
                      "description": "resources found"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "unauthorized"
                  }
              },
              "operationId": "getCrops",
              "summary": "get list of crops or individual crop"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/cropsUpdateReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/cropsUpdateRes"
                              }
                          }
                      },
                      "description": "crop updated"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "not found"
                  }
              },
              "operationId": "updateCrops",
              "summary": "update a crop by id"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/cropsNewReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/cropsNewRes"
                              }
                          }
                      },
                      "description": "crop created"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "not found"
                  }
              },
              "operationId": "newCrop",
              "summary": "register a new crop"
          },
          "delete": {
              "tags": [
                  " farm",
                  " management"
              ],
              "parameters": [
                  {
                      "name": "delById",
                      "description": "id of the item to delete",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "resource deleted"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "not found"
                  }
              },
              "operationId": "deleteCrops",
              "summary": "delete a crop by id"
          }
      },
      "/locations": {
          "summary": "manages locations",
          "get": {
              "tags": [
                  " management"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "id of the item to get on search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/locationsGetRes"
                              }
                          }
                      },
                      "description": "resources found"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "unauthorized"
                  }
              },
              "operationId": "getLocations",
              "summary": "get list of locations or one location by id"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/locationsUpdateReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " management"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/locationsUpdateRes"
                              }
                          }
                      },
                      "description": "resource updated"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "not found"
                  }
              },
              "operationId": "updateLocations",
              "summary": "update a location by id"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/locationsNewReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " management"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/locationsNewRes"
                              }
                          }
                      },
                      "description": "resource created"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "not found"
                  }
              },
              "operationId": "newLocation"
          },
          "delete": {
              "tags": [
                  " management"
              ],
              "parameters": [
                  {
                      "name": "delById",
                      "description": "id of the item to delete",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "resource deleted"
                  },
                  "400": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "bad request"
                  },
                  "401": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "unauthorized"
                  },
                  "404": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Error"
                              }
                          }
                      },
                      "description": "not found"
                  }
              }
          }
      },
      "/crop-locations": {
          "summary": "manages crops locations",
          "get": {
              "tags": [
                  " management",
                  " farm"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "id of item to get on search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "header"
                  },
                  {
                      "name": "getByCropName",
                      "description": "name of crop to filter in search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "header"
                  },
                  {
                      "name": "getByLocationCode",
                      "description": "code of location to filter on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "header"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/cropsLocationsGetRes"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getCropLocations",
              "summary": "gets a list of cropLocations or cropLocationById"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/cropLocationsUpdateReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/cropLocationsUpdateResponse"
                              }
                          }
                      },
                      "description": "resource updated"
                  }
              },
              "operationId": "updateCropLocation",
              "summary": "updates a crop-location by id"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/cropsLocationsNewReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/cropsLocationsNewRes"
                              }
                          }
                      },
                      "description": "resource created"
                  }
              },
              "operationId": "newCropLocation",
              "summary": "registers a new crop-location"
          },
          "delete": {
              "tags": [
                  " farm",
                  " management"
              ],
              "parameters": [
                  {
                      "name": "delById",
                      "description": "id of the item to delete",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "resource deleted"
                  }
              },
              "operationId": "deleteCropLocation",
              "summary": "deletes a crop-location by id"
          }
      },
      "/sensors": {
          "get": {
              "tags": [
                  " farm",
                  "monitoring"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "id of the sensor to search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getBySerial",
                      "description": "serial of the sensor to search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByLocationCode",
                      "description": "location code to filter on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByType",
                      "description": "type of sensor to filter in search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/sensorsGetResponse"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getSensors",
              "summary": "get list of sensors or one sensor by id"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/sensorsUpdateReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  "monitoring"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/sensorsUpdateRes"
                              }
                          }
                      },
                      "description": "resource updated"
                  }
              },
              "operationId": "updateSensor",
              "summary": "update sensor by id"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/sensorsNewReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  "monitoring"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/sensorsNewRes"
                              }
                          }
                      },
                      "description": "resource created"
                  }
              },
              "operationId": "newSensor",
              "summary": "registers a new sensor"
          },
          "delete": {
              "tags": [
                  " farm",
                  "monitoring"
              ],
              "parameters": [
                  {
                      "name": "delById",
                      "description": "id of the item to delete",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "header",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "resource deleted"
                  }
              },
              "operationId": "deleteSensor",
              "summary": "delete sensor by id"
          }
      },
      "/crop-stock": {
          "summary": "manages crops stock",
          "get": {
              "tags": [
                  " farm",
                  " management",
                  "market",
                  "transactions"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "get item by id on search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "header"
                  },
                  {
                      "name": "getByCropName",
                      "description": "filters by crop name on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "header"
                  },
                  {
                      "name": "getByFarmLocationCode",
                      "description": "filter by farm location code on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "header"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/cropStockGetRes"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getCropStock",
              "summary": "gets crop stock"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/cropStockRemoveReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management",
                  "market",
                  "transactions"
              ],
              "responses": {
                  "204": {
                      "description": "stock updated"
                  }
              },
              "operationId": "removeCropsStock",
              "summary": "removes crops stock"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/cropStockAddRequest"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management",
                  "market",
                  "transactions"
              ],
              "responses": {
                  "204": {
                      "description": "stock added"
                  }
              },
              "operationId": "addCropStock",
              "summary": "adds crops stock"
          }
      },
      "/markets": {
          "get": {
              "tags": [
                  "market",
                  " management"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "id of item to search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByLocationCode",
                      "description": "filter by location code on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/marketsGetRes"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getMarkets",
              "summary": "gets markets"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/marketsUpdateReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " management",
                  "market"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/marketsUpdateRes"
                              }
                          }
                      },
                      "description": "resource updated"
                  }
              },
              "operationId": "updateMarket",
              "summary": "updates markets"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/marketsNewReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " management",
                  "market"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/marketsNewRes"
                              }
                          }
                      },
                      "description": "resource created"
                  }
              },
              "operationId": "newMarket",
              "summary": "registers markets"
          },
          "delete": {
              "tags": [
                  " management",
                  "market"
              ],
              "parameters": [
                  {
                      "name": "delById",
                      "description": "id of item to delete",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "resource deleted"
                  }
              },
              "operationId": "deleteMarket",
              "summary": "delete markets by id"
          }
      },
      "/farmers": {
          "summary": "manages farmers",
          "get": {
              "tags": [
                  " farm",
                  " management"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "id of item to get in search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByFarmLocationCode",
                      "description": "filters by farmers farm location",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByFarmersClossestMarketCode",
                      "description": "filters by farmer clossests market code in search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/farmersGetRes"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getFarmers",
              "summary": "get farmers"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/farmersUpdateReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/farmersUpdateRes"
                              }
                          }
                      },
                      "description": "resource updated"
                  }
              },
              "operationId": "updateFarmer",
              "summary": "update farmers"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/farmersNewReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/farmersNewRes"
                              }
                          }
                      },
                      "description": "resource created"
                  }
              },
              "operationId": "newFarmer",
              "summary": "registers a new farmer"
          },
          "delete": {
              "tags": [
                  " farm",
                  " management"
              ],
              "parameters": [
                  {
                      "name": "delById",
                      "description": "id of item to delete",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "resource deleted"
                  }
              },
              "operationId": "deleteFarmer",
              "summary": "deletes a farmer by id"
          }
      },
      "/market-stock/": {
          "summary": "manages market stock",
          "get": {
              "tags": [
                  " farm",
                  " management",
                  "market",
                  "transactions"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "get item by id on search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "header"
                  },
                  {
                      "name": "getByCropName",
                      "description": "filters by crop name on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "header"
                  },
                  {
                      "name": "getByMarketCode",
                      "description": "filter by farm location code on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "header"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/marketStockGetRes"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getMarketStock",
              "summary": "gets crop stock"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/marketStockRemove"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management",
                  "market",
                  "transactions"
              ],
              "responses": {
                  "204": {
                      "description": "stock updated"
                  }
              },
              "operationId": "removeMarketStock",
              "summary": "removes market stock"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/marketStockAdd"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " farm",
                  " management",
                  "market",
                  "transactions"
              ],
              "responses": {
                  "204": {
                      "description": "stock added"
                  }
              },
              "operationId": "addMarketStock",
              "summary": "adds market stock"
          }
      },
      "/market-operations": {
          "summary": "market operations by grouped by market, product, and operation",
          "get": {
              "tags": [
                  " management",
                  "market",
                  "transactions"
              ],
              "parameters": [
                  {
                      "name": "getByMarketCode",
                      "description": "filter by market code on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByOperation",
                      "description": "filter by operation on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByProductName",
                      "description": "filter by product name on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/marketOperationsGetRes"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getMarketOperations",
              "summary": "get market operations grouped by market, product and operation"
          }
      },
      "/customers": {
          "summary": "manages customers",
          "get": {
              "tags": [
                  " management",
                  "market"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "id of item to search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByClossestMarketCode",
                      "description": "filters by clossest market code on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByPhone",
                      "description": "filters by phone number on search",
                      "schema": {
                          "type": "number"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByEmail",
                      "description": "filters by email on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/customersGetRes"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getCustomers",
              "summary": "get customers"
          },
          "put": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/customersUpdateReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " management",
                  "market"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/customersUpdateRes"
                              }
                          }
                      },
                      "description": "resource updated"
                  }
              },
              "operationId": "updateCustomer",
              "summary": "update customers"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/customersNewReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " management",
                  "market"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/customersNewRes"
                              }
                          }
                      },
                      "description": "resource created"
                  }
              },
              "operationId": "newCustomer",
              "summary": "registers new customers"
          },
          "delete": {
              "tags": [
                  " management",
                  "market"
              ],
              "parameters": [
                  {
                      "name": "delById",
                      "description": "id of item to delete",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query",
                      "required": true
                  }
              ],
              "responses": {
                  "204": {
                      "description": "resource deleted"
                  }
              },
              "operationId": "deleteCustomer",
              "summary": "delete customes"
          }
      },
      "/invoices": {
          "get": {
              "tags": [
                  " management",
                  "invoices",
                  "market",
                  "transactions"
              ],
              "parameters": [
                  {
                      "name": "getById",
                      "description": "id of item to search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByMarketCode",
                      "description": "filters by market code on search",
                      "schema": {
                          "type": "string"
                      },
                      "in": "query"
                  },
                  {
                      "name": "getByCustomerId",
                      "description": "filters by customer id on search",
                      "schema": {
                          "type": "integer"
                      },
                      "in": "query"
                  }
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/invoiceGetRes"
                              }
                          }
                      },
                      "description": "resource found"
                  }
              },
              "operationId": "getInvoices",
              "summary": "get invoices by market or customer"
          },
          "post": {
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/invoiceNewReq"
                          }
                      }
                  },
                  "required": true
              },
              "tags": [
                  " management",
                  "invoices",
                  "market",
                  "transactions"
              ],
              "responses": {
                  "200": {
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/invoiceNewRes"
                              }
                          }
                      },
                      "description": "resource created"
                  }
              },
              "operationId": "newInvoice",
              "summary": "register new invoices"
          }
      }
  },
  "components": {
      "schemas": {
          "cropsNewRes": {
              "title": "Root Type for cropsNewRes",
              "description": "response after registering a new crop",
              "type": "object",
              "properties": {
                  "code": {
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/cropsData",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "30",
                      "name": "tomatoes"
                  }
              }
          },
          "cropsUpdateRes": {
              "title": "Root Type for cropsUpdateRes",
              "description": "response after updating data of a crop",
              "type": "object",
              "properties": {
                  "code": {
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/cropsData",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "10",
                      "name": "celery"
                  }
              }
          },
          "cropsGetRes": {
              "title": "Root Type for cropsGetRes",
              "description": "response after getting all crops or one crop by id",
              "type": "object",
              "properties": {
                  "code": {
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/cropsData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "90",
                          "name": "potato"
                      },
                      {
                          "id": "92",
                          "name": "sweet potato"
                      }
                  ]
              }
          },
          "locationsGetRes": {
              "title": "Root Type for locationsGetRes",
              "description": "respnse for GET locations",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/locationsData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "340",
                          "code": "arg-rs89",
                          "name": "Rosario/Arg sec 89"
                      },
                      {
                          "id": "40",
                          "code": "bz-amz78",
                          "name": "Brazil/Amazon sec 78"
                      }
                  ]
              }
          },
          "locationsNewReq": {
              "title": "Root Type for locationsNewRequest",
              "description": "request to register a new location",
              "required": [
                  "code",
                  "name"
              ],
              "type": "object",
              "properties": {
                  "code": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  }
              },
              "example": {
                  "code": "col-meta002",
                  "name": "Colombia/Meta correg 002"
              }
          },
          "cropsLocationsGetRes": {
              "title": "Root Type for cropsLocationGetRes",
              "description": "response for get crops-locations operation",
              "type": "object",
              "properties": {
                  "code": {
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/cropsLocationsData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "7426",
                          "location_code": "arg-ros25",
                          "crop_name": "carrot",
                          "status": "plow"
                      },
                      {
                          "id": "8774",
                          "location_code": "bog-gir25",
                          "crop_name": "sweet potato",
                          "status": "ready"
                      }
                  ]
              }
          },
          "cropsLocationsNewRes": {
              "title": "Root Type for cropsLocationsNewRes",
              "description": "response after creating a new crop-location",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/cropsLocationsData",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "location_code": {
                              "type": "string"
                          },
                          "crop_name": {
                              "type": "string"
                          },
                          "status": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "4401",
                      "location_code": "brz-atg2",
                      "crop_name": "coffee",
                      "status": "grow"
                  }
              }
          },
          "cropLocationsUpdateReq": {
              "title": "Root Type for cropLocationsUpdateReq",
              "description": "request for updating a crop-location by id",
              "required": [
                  "id",
                  "status"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "location_code": {
                      "type": "string"
                  },
                  "crop_name": {
                      "type": "string"
                  },
                  "status": {
                      "enum": [
                          "inactive",
                          "plow",
                          "active",
                          "grow",
                          "ready",
                          "harvest"
                      ],
                      "type": "string"
                  }
              },
              "example": {
                  "id": "8391",
                  "location_code": "arg-ros62",
                  "crop_name": "tomato",
                  "status": "harvest"
              }
          },
          "cropLocationSensorHistoryData": {
              "title": "Root Type for cropLocationSensorHistoryData",
              "description": "history of sensor data in location",
              "required": [
                  "id"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "sensor_serial": {
                      "type": "string"
                  },
                  "crop_location_code": {
                      "type": "string"
                  },
                  "crop_name": {
                      "type": "string"
                  },
                  "sensor_data": {
                      "type": "number"
                  },
                  "sensor_type": {
                      "type": "string"
                  },
                  "sensor_unit": {
                      "type": "string"
                  },
                  "timeStamp": {
                      "format": "date-time",
                      "type": "string"
                  }
              },
              "example": {
                  "id": "82345091",
                  "sensor_serial": "ASTVA-991323246",
                  "crop_location_code": "arg-ros-fta98",
                  "crop_name": "carrot",
                  "sensor_data": "32.2",
                  "sensor_type": "thermometer",
                  "sensor_unit": "C",
                  "timeStamp": "2024-03-20T12:00:14UTC"
              }
          },
          "cropStockGetRes": {
              "title": "Root Type for cropStockGetRes",
              "description": "response for get crop stock",
              "type": "object",
              "properties": {
                  "code": {
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/cropStockData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "6872168",
                          "crop_name": "rice",
                          "farm_location_code": "col-amzn048",
                          "quantity": "180",
                          "unit": "kg",
                          "farm_value_per_unit": "2.0"
                      },
                      {
                          "id": "71113548",
                          "crop_name": "white sugar",
                          "farm_location_code": "col-vlc458",
                          "quantity": "1560",
                          "unit": "kg",
                          "farm_value_per_unit": "1.8"
                      }
                  ]
              }
          },
          "marketsGetRes": {
              "title": "Root Type for marketsGetRes",
              "description": "response of markets or one market by id, location",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/marketsData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "90872335",
                          "code": "cam-001",
                          "location_code": "bog/cll20a-kr32"
                      },
                      {
                          "id": "10877115",
                          "code": "caf-001",
                          "location_code": "bog/kr88-cll23s"
                      }
                  ]
              }
          },
          "marketStockGetRes": {
              "title": "Root Type for marketStockGetRes",
              "description": "response of market stocks",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/marketStockData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "321654",
                          "product_name": "carrot",
                          "quantity": "424",
                          "unit": "kg",
                          "market_code": "cam-001",
                          "farmer_id": "11354687",
                          "farm_value_per_unit": "3.6",
                          "selling_value_per_unit": "3.9"
                      },
                      {
                          "id": "775624168",
                          "product_name": "rice",
                          "quantity": "310",
                          "unit": "kg",
                          "market_code": "cam-001",
                          "farmer_id": "11354687",
                          "farm_value_per_unit": "2.1",
                          "selling_value_per_unit": "3.0"
                      }
                  ]
              }
          },
          "marketOperationsData": {
              "title": "Root Type for marketOperationsData",
              "description": "base of market operations data",
              "type": "object",
              "properties": {
                  "market_code": {
                      "type": "string"
                  },
                  "product_name": {
                      "type": "string"
                  },
                  "operation": {
                      "type": "string"
                  },
                  "quantity": {
                      "type": "string"
                  },
                  "unit": {
                      "type": "string"
                  },
                  "totalValue": {
                      "type": "string"
                  }
              },
              "example": {
                  "market_code": "cam-001",
                  "product_name": "rice",
                  "operation": "buy",
                  "quantity": "195",
                  "unit": "kg",
                  "totalValue": "340.1"
              }
          },
          "marketOperationsGetRes": {
              "title": "Root Type for marketOperationsGetRes",
              "description": "response of market operations grouped by market, product and operation",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/marketOperationsData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "market_code": "cam-001",
                          "product_name": "rice",
                          "operation": "buy",
                          "quantity": "195",
                          "unit": "kg",
                          "totalValue": "340.1"
                      },
                      {
                          "market_code": "cam-001",
                          "product_name": "rice",
                          "operation": "sell",
                          "quantity": "50",
                          "unit": "kg",
                          "totalValue": "211.7"
                      }
                  ]
              }
          },
          "customersGetRes": {
              "title": "Root Type for customersGetRes",
              "description": "response of customers by clossest market code, phone, email or id, grouped by market",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/customersData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "235402",
                          "fullName": "DDD EEE FFF",
                          "gender": "M",
                          "phone": "6541230009",
                          "email": "customer1@test.com",
                          "address": "ascb 456 scs 44 70",
                          "clossest_market_code": "cam-001"
                      },
                      {
                          "id": "6648922",
                          "fullName": "DDD EEE FFF",
                          "gender": "F",
                          "phone": "6541230119",
                          "email": "customer2@test.com",
                          "address": "ascb 456 scs 44 70",
                          "clossest_market_code": "cam-001"
                      }
                  ]
              }
          },
          "invoiceGetRes": {
              "title": "Root Type for invoiceGetRes",
              "description": "response of invoices grouped by market, customer with details of shopping cart",
              "required": [
                  "data"
              ],
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/invoiceData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "234590",
                          "customer_id": "23450293885",
                          "market_code": "cam-001",
                          "details": [
                              {
                                  "product_name": "carrot",
                                  "quantity": "2",
                                  "unit": "kg",
                                  "total_value": "2.1"
                              },
                              {
                                  "product_name": "rice",
                                  "quantity": "4",
                                  "unit": "kg",
                                  "total_value": "3.4"
                              }
                          ]
                      }
                  ]
              }
          },
          "customersUpdateRes": {
              "title": "Root Type for customersUpdateRes",
              "description": "response after updating a customer data",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/customersData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "fullName": {
                              "type": "string"
                          },
                          "gender": {
                              "type": "string"
                          },
                          "phone": {
                              "type": "string"
                          },
                          "email": {
                              "type": "string"
                          },
                          "address": {
                              "type": "string"
                          },
                          "clossest_market_code": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "235402",
                      "fullName": "DDD EEE FFF",
                      "gender": "M",
                      "phone": "6541230009",
                      "email": "customerUP5@test.com",
                      "address": "ascb 456 scs 44 70",
                      "clossest_market_code": "cam-001"
                  }
              }
          },
          "Error": {
              "required": [
                  "code",
                  "description"
              ],
              "type": "object",
              "properties": {
                  "description": {
                      "description": "The error message indicating what the issue is",
                      "type": "string"
                  },
                  "code": {
                      "description": "The http status code",
                      "maximum": 600,
                      "minimum": 100,
                      "type": "integer"
                  }
              },
              "example": {
                  "code": 400,
                  "description": "wrong input"
              }
          },
          "farmersGetRes": {
              "title": "Root Type for farmersGetRes",
              "description": "response of farmers or farmer by id, farm location, clossest market",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/farmersData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "900012329440",
                          "full_name": "AAA BBB CCC",
                          "gender": "M",
                          "phone": "1236541230",
                          "email": "farmer1@test.com",
                          "address": "kr 8 cl 12 55 sur",
                          "farm_location_code": "col-chia00154",
                          "clossets_market_code": "cam-0001"
                      },
                      {
                          "id": "9007780352",
                          "full_name": "AAA BBB CCC",
                          "gender": "F",
                          "phone": "9871236540",
                          "email": "farmer4@test.com",
                          "address": "tv 78 kr 10 10",
                          "farm_location_code": "col-chia1457",
                          "clossets_market_code": "cam-0001"
                      }
                  ]
              }
          },
          "farmersNewRes": {
              "title": "Root Type for farmersNewRes",
              "description": "response for registering a new farmer",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/farmersData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "full_name": {
                              "type": "string"
                          },
                          "gender": {
                              "type": "string"
                          },
                          "phone": {
                              "type": "string"
                          },
                          "email": {
                              "type": "string"
                          },
                          "address": {
                              "type": "string"
                          },
                          "farm_location_code": {
                              "type": "string"
                          },
                          "clossets_market_code": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "900012329440",
                      "full_name": "AAA BBB CCC",
                      "gender": "M",
                      "phone": "1236541230",
                      "email": "farmer1@test.com",
                      "address": "cl 8 kr 12 55",
                      "farm_location_code": "col-chia00154",
                      "clossets_market_code": "cam-0001"
                  }
              }
          },
          "farmersUpdateRes": {
              "title": "Root Type for farmersUpdateRes",
              "description": "Response after updatings a farmers data",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/farmersData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "full_name": {
                              "type": "string"
                          },
                          "gender": {
                              "type": "string"
                          },
                          "phone": {
                              "type": "string"
                          },
                          "email": {
                              "type": "string"
                          },
                          "address": {
                              "type": "string"
                          },
                          "farm_location_code": {
                              "type": "string"
                          },
                          "clossets_market_code": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "900012329440",
                      "full_name": "AAA BBB CCC",
                      "gender": "M",
                      "phone": "1236541230",
                      "email": "farmer1@test.com",
                      "address": "kr 8 cl 12 55 sur",
                      "farm_location_code": "col-chia00154",
                      "clossets_market_code": "cam-0001"
                  }
              }
          },
          "invoiceNewReq": {
              "title": "Root Type for invoiceNewReq",
              "description": "registers a new invoice",
              "required": [
                  "details",
                  "market_code"
              ],
              "type": "object",
              "properties": {
                  "customer_id": {
                      "type": "integer"
                  },
                  "market_code": {
                      "type": "string"
                  },
                  "details": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/invoiceDetailsData"
                      }
                  }
              },
              "example": {
                  "customer_id": "23450293885",
                  "market_code": "cam-001",
                  "details": [
                      {
                          "product_name": "carrot",
                          "quantity": "2",
                          "unit": "kg",
                          "total_value": "2.1"
                      },
                      {
                          "product_name": "rice",
                          "quantity": "4",
                          "unit": "kg",
                          "total_value": "3.4"
                      }
                  ]
              }
          },
          "invoiceNewRes": {
              "title": "Root Type for invoiceNewRes",
              "description": "response of new invoice",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/invoiceData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "customer_id": {
                              "type": "integer"
                          },
                          "market_code": {
                              "type": "string"
                          },
                          "details": {
                              "type": "array",
                              "items": {
                                  "type": "object",
                                  "properties": {
                                      "product_name": {
                                          "type": "string"
                                      },
                                      "quantity": {
                                          "type": "string"
                                      },
                                      "unit": {
                                          "type": "string"
                                      },
                                      "total_value": {
                                          "type": "string"
                                      }
                                  }
                              }
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "234590",
                      "customer_id": "23450293885",
                      "market_code": "cam-001",
                      "details": [
                          {
                              "product_name": "carrot",
                              "quantity": "2",
                              "unit": "kg",
                              "total_value": "2.1"
                          },
                          {
                              "product_name": "rice",
                              "quantity": "4",
                              "unit": "kg",
                              "total_value": "3.4"
                          }
                      ]
                  }
              }
          },
          "locationsNewRes": {
              "title": "Root Type for locationsNewRes",
              "description": "response for a new location created",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/locationsData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "code": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "391",
                      "code": "ec-qt349",
                      "name": "Ecuador/Quito frm 349"
                  }
              }
          },
          "locationsUpdateRes": {
              "title": "Root Type for locationsUpdateRes",
              "description": "response after updating a location by id",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/locationsData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "code": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "989",
                      "code": "mx-al8",
                      "name": "Mexico/Alocation8"
                  }
              }
          },
          "marketsNewRes": {
              "title": "Root Type for marketsNewRes",
              "description": "response after creating a new market",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/marketsData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "code": {
                              "type": "string"
                          },
                          "location_code": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "90872999",
                      "code": "cam-001",
                      "location_code": "bog/cll22-kr34"
                  }
              }
          },
          "marketsUpdateRes": {
              "title": "Root Type for marketsUpdateRes",
              "description": "response after updating a markets data",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/marketsData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "code": {
                              "type": "string"
                          },
                          "location_code": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "90872335",
                      "code": "cam-001",
                      "location_code": "bog/cll20a-kr32"
                  }
              }
          },
          "sensorsUpdateRes": {
              "title": "Root Type for sensorsUpdateRes",
              "description": "response after updating the registry of a sensor",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "object",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "serial": {
                              "type": "string"
                          },
                          "location_code": {
                              "type": "string"
                          },
                          "type": {
                              "type": "string"
                          },
                          "unit": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "8234590",
                      "serial": "KNSPP-1200323",
                      "location_code": "bog-gir-farm-L8",
                      "type": "thermometer",
                      "unit": "F"
                  }
              }
          },
          "cropLocationsUpdateResponse": {
              "title": "Root Type for cropLocationsUpdateResponse",
              "description": "response after updating a crop-location",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/cropsLocationsData",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "location_code": {
                              "type": "string"
                          },
                          "crop_name": {
                              "type": "string"
                          },
                          "status": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "2214",
                      "location_code": "bog-gir74",
                      "crop_name": "pumpkin",
                      "status": "ready"
                  }
              }
          },
          "cropsData": {
              "title": "Root Type for cropsData",
              "description": "base for crops data req and res",
              "required": [
                  "id"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "name": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "502",
                  "name": "carrot"
              }
          },
          "cropsLocationsData": {
              "title": "Root Type for cropLocationsData",
              "description": "base data for cropLocations operations",
              "required": [
                  "id",
                  "state"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "location_code": {
                      "type": "string"
                  },
                  "crop_name": {
                      "type": "string"
                  },
                  "state": {
                      "enum": [
                          "inactive",
                          "plow",
                          "active",
                          "grow",
                          "ready",
                          "harvest"
                      ],
                      "type": "string"
                  }
              },
              "example": {
                  "id": "7831",
                  "location_code": "bog-gir300",
                  "crop_name": "tomato",
                  "state": "active"
              }
          },
          "cropsLocationsNewReq": {
              "title": "Root Type for cropsLocationsNewReq",
              "description": "request for registering a new crop-location",
              "required": [
                  "status"
              ],
              "type": "object",
              "properties": {
                  "location_code": {
                      "type": "string"
                  },
                  "crop_name": {
                      "type": "string"
                  },
                  "status": {
                      "type": "string"
                  }
              },
              "example": {
                  "location_code": "es-md7",
                  "crop_name": "coffee",
                  "status": "inactive"
              }
          },
          "cropsNewReq": {
              "title": "Root Type for cropsNewReq",
              "description": "request to register a new crop",
              "required": [
                  "name"
              ],
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string"
                  }
              },
              "example": {
                  "name": "squash"
              }
          },
          "cropStockAddRequest": {
              "title": "Root Type for cropStockAddRequest",
              "description": "request for add to crop stock",
              "required": [
                  "crop_name",
                  "farm_location_code",
                  "quantity",
                  "unit",
                  "farm_value_per_unit"
              ],
              "type": "object",
              "properties": {
                  "crop_name": {
                      "type": "string"
                  },
                  "farm_location_code": {
                      "type": "string"
                  },
                  "quantity": {
                      "type": "number"
                  },
                  "unit": {
                      "type": "string"
                  },
                  "farm_value_per_unit": {
                      "type": "string"
                  }
              },
              "example": {
                  "crop_name": "black beans",
                  "farm_location_code": "col-antq420",
                  "quantity": "200",
                  "unit": "kg",
                  "farm_value_per_unit": "4.0"
              }
          },
          "cropStockData": {
              "title": "Root Type for cropStockData",
              "description": "base to stock of crops in farms",
              "required": [
                  "id"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "crop_name": {
                      "type": "string"
                  },
                  "farm_location_code": {
                      "type": "string"
                  },
                  "quantity": {
                      "type": "number"
                  },
                  "unit": {
                      "type": "string"
                  },
                  "farm_value_per_unit": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "3216576218",
                  "crop_name": "rice",
                  "farm_location_code": "col-meta4585",
                  "quantity": "450",
                  "unit": "kg",
                  "farm_value_per_unit": "2.1"
              }
          },
          "cropsUpdateReq": {
              "title": "Root Type for cropsUpdateReq",
              "description": "request to update a crop by id",
              "required": [
                  "id"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "name": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "62",
                  "name": "pumpkin"
              }
          },
          "customersNewReq": {
              "title": "Root Type for customersNewReq",
              "description": "request to register a new customer",
              "required": [
                  "full_name",
                  "phone",
                  "email",
                  "clossest_market_code"
              ],
              "type": "object",
              "properties": {
                  "full_name": {
                      "type": "string"
                  },
                  "gender": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "address": {
                      "type": "string"
                  },
                  "clossest_market_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "full_name": "DDD EEE FFF",
                  "gender": "M",
                  "phone": "6541230009",
                  "email": "customerUP5@test.com",
                  "address": "ascb 456 scs 44 70",
                  "clossest_market_code": "cam-001"
              }
          },
          "customersData": {
              "title": "Root Type for customersData",
              "description": "base object for customers data",
              "required": [
                  "id",
                  "full_name",
                  "phone",
                  "email",
                  "clossest_market_code"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "full_name": {
                      "type": "string"
                  },
                  "gender": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "address": {
                      "type": "string"
                  },
                  "clossest_market_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "235402",
                  "full_name": "DDD EEE FFF",
                  "gender": "M",
                  "phone": "6541230009",
                  "email": "customer1@test.com",
                  "address": "ascb 456 scs 44 70",
                  "clossest_market_code": "cam-001"
              }
          },
          "customersNewRes": {
              "title": "Root Type for customersNewRes",
              "description": "response after creating a new customer",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/customersData",
                      "properties": {
                          "id": {
                              "type": "integer"
                          },
                          "full_name": {
                              "type": "string"
                          },
                          "gender": {
                              "type": "string"
                          },
                          "phone": {
                              "type": "string"
                          },
                          "email": {
                              "type": "string"
                          },
                          "address": {
                              "type": "string"
                          },
                          "clossest_market_code": {
                              "type": "string"
                          }
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "235402",
                      "fullName": "DDD EEE FFF",
                      "gender": "M",
                      "phone": "6541230009",
                      "email": "customerUP5@test.com",
                      "address": "ascb 456 scs 44 70",
                      "clossest_market_code": "cam-001"
                  }
              }
          },
          "customersUpdateReq": {
              "title": "Root Type for customersUpdateReq",
              "description": "request to update a customer data",
              "required": [
                  "id",
                  "full_name",
                  "phone",
                  "email",
                  "clossest_market_code"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "fullName": {
                      "type": "string"
                  },
                  "gender": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "address": {
                      "type": "string"
                  },
                  "clossest_market_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "235402",
                  "fullName": "DDD EEE FFF",
                  "gender": "M",
                  "phone": "6541230009",
                  "email": "customerUP5@test.com",
                  "address": "ascb 456 scs 44 70",
                  "clossest_market_code": "cam-001"
              }
          },
          "farmersData": {
              "title": "Root Type for farmersData",
              "description": "base model of farmers data",
              "required": [
                  "id",
                  "full_name",
                  "phone",
                  "email",
                  "farm_location_code",
                  "clossets_market_code"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "full_name": {
                      "type": "string"
                  },
                  "gender": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "address": {
                      "type": "string"
                  },
                  "farm_location_code": {
                      "type": "string"
                  },
                  "clossets_market_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "9000123200230",
                  "full_name": "AAA BBB CCC",
                  "gender": "M",
                  "phone": "1234567890",
                  "email": "farmer1@test.com",
                  "address": "cl 8 kr 12 55",
                  "farm_location_code": "col-chia00154",
                  "clossets_market_code": "cam-0001"
              }
          },
          "farmersNewReq": {
              "title": "Root Type for farmersNewReq",
              "description": "request for registering a farmer",
              "required": [
                  "full_name",
                  "phone",
                  "email",
                  "farm_location_code",
                  "clossets_market_code"
              ],
              "type": "object",
              "properties": {
                  "full_name": {
                      "type": "string"
                  },
                  "gender": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "address": {
                      "type": "string"
                  },
                  "farm_location_code": {
                      "type": "string"
                  },
                  "clossets_market_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "full_name": "AAA BBB CCC",
                  "gender": "M",
                  "phone": "1234567890",
                  "email": "farmer1@test.com",
                  "address": "cl 8 kr 12 55",
                  "farm_location_code": "col-chia00154",
                  "clossets_market_code": "cam-0001"
              }
          },
          "farmersUpdateReq": {
              "title": "Root Type for farmersUpdateReq",
              "description": "request to update farmers data",
              "required": [
                  "id",
                  "full_name",
                  "phone",
                  "email",
                  "farm_location_code",
                  "clossets_market_code"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "full_name": {
                      "type": "string"
                  },
                  "gender": {
                      "type": "string"
                  },
                  "phone": {
                      "type": "string"
                  },
                  "email": {
                      "type": "string"
                  },
                  "address": {
                      "type": "string"
                  },
                  "farm_location_code": {
                      "type": "string"
                  },
                  "clossets_market_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "900012329440",
                  "full_name": "AAA BBB CCC",
                  "gender": "M",
                  "phone": "1236541230",
                  "email": "farmer1@test.com",
                  "address": "kr 8 cl 12 55 sur",
                  "farm_location_code": "col-chia00154",
                  "clossets_market_code": "cam-0001"
              }
          },
          "invoiceData": {
              "title": "Root Type for invoiceData",
              "description": "base of invoice data",
              "required": [
                  "id",
                  "customer_id",
                  "market_code",
                  "details"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "customer_id": {
                      "type": "integer"
                  },
                  "market_code": {
                      "type": "string"
                  },
                  "details": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/invoiceDetailsData"
                      }
                  }
              },
              "example": {
                  "id": "234590",
                  "customer_id": "23450293885",
                  "market_code": "cam-001",
                  "details": [
                      {
                          "product_name": "carrot",
                          "quantity": "2",
                          "unit": "kg",
                          "total_value": "2.1"
                      },
                      {
                          "product_name": "rice",
                          "quantity": "4",
                          "unit": "kg",
                          "total_value": "3.4"
                      }
                  ]
              }
          },
          "invoiceDetailsData": {
              "title": "Root Type for invoiceDetailsData",
              "description": "base object of invoice details",
              "required": [
                  "product_name",
                  "quantity",
                  "unit",
                  "total_value"
              ],
              "type": "object",
              "properties": {
                  "product_name": {
                      "type": "string"
                  },
                  "quantity": {
                      "type": "string"
                  },
                  "unit": {
                      "type": "string"
                  },
                  "total_value": {
                      "type": "string"
                  }
              },
              "example": {
                  "product_name": "carrot",
                  "quantity": "2",
                  "unit": "kg",
                  "total_value": "2.1"
              }
          },
          "locationsData": {
              "title": "Root Type for locationsData",
              "description": "base schema for locations data",
              "required": [
                  "id",
                  "code",
                  "name"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "code": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "313",
                  "code": "bog-gir-300",
                  "name": "Bog-Gir KM 300"
              }
          },
          "locationsUpdateReq": {
              "title": "Root Type for locationsUpdateReq",
              "description": "request to update a request by id",
              "required": [
                  "id",
                  "code",
                  "name"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "code": {
                      "type": "string"
                  },
                  "name": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "934",
                  "code": "ch-san70",
                  "name": "Chile/Snatiago reg 70"
              }
          },
          "marketsData": {
              "title": "Root Type for marketsData",
              "description": "base model of markets data",
              "required": [
                  "id",
                  "code",
                  "location_code"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "code": {
                      "type": "string"
                  },
                  "location_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "90872335",
                  "code": "cam-001",
                  "location_code": "bog/cll22-kr34"
              }
          },
          "marketsNewReq": {
              "title": "Root Type for marketsNewReq",
              "description": "request for regitering a market",
              "required": [
                  "code",
                  "location_code"
              ],
              "type": "object",
              "properties": {
                  "code": {
                      "type": "string"
                  },
                  "location_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "code": "dfa-001",
                  "location_code": "med/dg52-tv41"
              }
          },
          "marketStockAdd": {
              "title": "Root Type for marketStockAdd",
              "description": "adding to market stock",
              "required": [
                  "product_name",
                  "quantity",
                  "unit",
                  "market_code",
                  "farm_value_per_unit",
                  "selling_value_per_unit"
              ],
              "type": "object",
              "properties": {
                  "product_name": {
                      "type": "string"
                  },
                  "quantity": {
                      "type": "number"
                  },
                  "unit": {
                      "type": "string"
                  },
                  "market_code": {
                      "type": "string"
                  },
                  "farm_value_per_unit": {
                      "type": "number"
                  },
                  "selling_value_per_unit": {
                      "type": "number"
                  }
              },
              "example": {
                  "product_name": "carrot",
                  "quantity": "424",
                  "unit": "kg",
                  "market_code": "cam-001",
                  "farmer_id": "11354687",
                  "farm_value_per_unit": "3.6",
                  "selling_value_per_unit": "3.9"
              }
          },
          "marketStockData": {
              "title": "Root Type for marketStockData",
              "description": "base model of market stock data",
              "required": [
                  "id",
                  "product_name",
                  "quantity",
                  "unit",
                  "market_code",
                  "farm_value_per_unit",
                  "selling_value_per_unit"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "product_name": {
                      "type": "string"
                  },
                  "quantity": {
                      "type": "number"
                  },
                  "unit": {
                      "type": "string"
                  },
                  "market_code": {
                      "type": "string"
                  },
                  "farm_value_per_unit": {
                      "type": "string"
                  },
                  "selling_value_per_unit": {
                      "type": "string"
                  },
                  "farmer_id": {
                      "description": "",
                      "type": "integer"
                  }
              },
              "example": {
                  "id": "321654",
                  "product_name": "carrot",
                  "quantity": "424",
                  "unit": "kg",
                  "market_code": "cam-001",
                  "farmer_id": "11354687",
                  "farm_value_per_unit": "3.6",
                  "selling_value_per_unit": "3.9"
              }
          },
          "marketStockRemove": {
              "title": "Root Type for marketStockRemove",
              "description": "Removes from market stock",
              "required": [
                  "id",
                  "product_name",
                  "quantity",
                  "unit",
                  "market_code",
                  "farm_value_per_unit",
                  "selling_value_per_unit"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "product_name": {
                      "type": "string"
                  },
                  "quantity": {
                      "type": "number"
                  },
                  "unit": {
                      "type": "string"
                  },
                  "market_code": {
                      "type": "string"
                  },
                  "farm_value_per_unit": {
                      "type": "number"
                  },
                  "selling_value_per_unit": {
                      "type": "number"
                  }
              },
              "example": {
                  "id": "321654",
                  "product_name": "carrot",
                  "quantity": "424",
                  "unit": "kg",
                  "market_code": "cam-001",
                  "farmer_id": "11354687",
                  "farm_value_per_unit": "3.6",
                  "selling_value_per_unit": "3.9"
              }
          },
          "cropStockRemoveReq": {
              "title": "Root Type for cropStockAddRequest",
              "description": "request for remove to crop stock",
              "required": [
                  "crop_name",
                  "farm_location_code",
                  "quantity",
                  "unit",
                  "farm_value_per_unit"
              ],
              "type": "object",
              "properties": {
                  "crop_name": {
                      "type": "string"
                  },
                  "farm_location_code": {
                      "type": "string"
                  },
                  "quantity": {
                      "type": "number"
                  },
                  "unit": {
                      "type": "string"
                  },
                  "farm_value_per_unit": {
                      "type": "string"
                  },
                  "id": {
                      "description": "",
                      "type": "integer"
                  }
              },
              "example": {
                  "id": "54684",
                  "crop_name": "black beans",
                  "farm_location_code": "col-antq420",
                  "quantity": "200",
                  "unit": "kg",
                  "farm_value_per_unit": "4.0"
              }
          },
          "marketsUpdateReq": {
              "title": "Root Type for marketsUpdateReq",
              "description": "request for updating data of market by id",
              "required": [
                  "id",
                  "code",
                  "location_code"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "code": {
                      "type": "string"
                  },
                  "location_code": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "90872335",
                  "code": "cam-001",
                  "location_code": "bog/cll20a-kr32"
              }
          },
          "sensorsData": {
              "title": "Root Type for sensorsData",
              "description": "base object of sensors data",
              "required": [
                  "id",
                  "serial",
                  "location_code",
                  "type",
                  "unit"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "serial": {
                      "type": "string"
                  },
                  "location_code": {
                      "type": "string"
                  },
                  "type": {
                      "type": "string"
                  },
                  "unit": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "21349",
                  "serial": "rsfpa-9921248",
                  "location_code": "br<-car902",
                  "type": "humidity",
                  "unit": "g/m3"
              }
          },
          "sensorsGetResponse": {
              "title": "Root Type for sensorsGetResponse",
              "description": "response of sensors or one sensor by id",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/sensorsData"
                      }
                  }
              },
              "example": {
                  "code": 200,
                  "data": [
                      {
                          "id": "8234590",
                          "serial": "KNSPP-1200323",
                          "location_code": "bog-gir-farm-L8",
                          "type": "thermometer",
                          "unit": "C"
                      },
                      {
                          "id": "994100",
                          "serial": "KOIL-711265",
                          "location_code": "bog-gir-farm-L8",
                          "type": "wind",
                          "unit": "m/s"
                      }
                  ]
              }
          },
          "sensorsNewReq": {
              "title": "Root Type for sensorsNewReq",
              "description": "request for registering a new sensor",
              "required": [
                  "serial",
                  "location_code",
                  "type",
                  "unit"
              ],
              "type": "object",
              "properties": {
                  "serial": {
                      "type": "string"
                  },
                  "location_code": {
                      "type": "string"
                  },
                  "type": {
                      "type": "string"
                  },
                  "unit": {
                      "type": "string"
                  }
              },
              "example": {
                  "serial": "KNSPP-1200323",
                  "location_code": "bog-gir-farm-L8",
                  "type": "thermometer",
                  "unit": "C"
              }
          },
          "sensorsNewRes": {
              "title": "Root Type for sensorsNewRes",
              "description": "response after registering a new sensor",
              "type": "object",
              "properties": {
                  "code": {
                      "format": "int32",
                      "type": "integer"
                  },
                  "data": {
                      "$ref": "#/components/schemas/sensorsData"
                  }
              },
              "example": {
                  "code": 200,
                  "data": {
                      "id": "4130002",
                      "serial": "KNSPP-1200323",
                      "location_code": "bog-gir-farm-L8",
                      "type": "thermometer",
                      "unit": "C"
                  }
              }
          },
          "sensorsUpdateReq": {
              "title": "Root Type for sensorsUpdateReq",
              "description": "request for updating a sensor registry",
              "required": [
                  "id",
                  "serial",
                  "location_code",
                  "type",
                  "unit"
              ],
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "serial": {
                      "type": "string"
                  },
                  "location_code": {
                      "type": "string"
                  },
                  "type": {
                      "type": "string"
                  },
                  "unit": {
                      "type": "string"
                  }
              },
              "example": {
                  "id": "8234590",
                  "serial": "KNSPP-1200323",
                  "location_code": "bog-gir-farm-L8",
                  "type": "thermometer",
                  "unit": "F"
              }
          }
      },
      "examples": {
          "error400": {
              "summary": " Invalid Request",
              "description": "Example when the client sends an invalid request",
              "value": {
                  "code": 400,
                  "description": "Invalid Request"
              }
          }
      }
  },
  "tags": [
      {
          "name": "monitoring",
          "description": "monitoring"
      },
      {
          "name": " farm",
          "description": " farm"
      },
      {
          "name": "market",
          "description": "market"
      },
      {
          "name": "transactions",
          "description": "transactions"
      },
      {
          "name": " management",
          "description": " management"
      },
      {
          "name": "invoices",
          "description": "invoices"
      }
  ]
}