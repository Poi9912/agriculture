name: agriculture-sandbox
services:
  watchtower:
    image: containrrr/watchtower:latest
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true
  reverse-proxy: 
    image: traefik:latest
    restart: unless-stopped
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${{ DOMAIN_REGISTER_EMAIL }}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--entrypoints.metrics.address=:8899"
      - "--metrics.prometheus.entryPoint=metrics"
    ports:
      - 80:80
      - 443:443
    expose:
      - 8899
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true
  api:
    image: poi9912/agriculture-api:latest
    environment:
      - HOST=api-agriculture.${{ SANDBOX_HOST }}
      - ENV=sb
      - ENDPOINT=http://microcks:8080/rest/agriculture-api/1.0.0
      - TIMEOUT=10
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 2
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host("api-agriculture.${{ SANDBOX_HOST }}")
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=myresolver
      - com.centurylinklabs.watchtower.enable=true
  importer:
    image: poi9912/agriculture-mock-importer:latest
    depends_on:
      microcks:
        condition: service_started
  microcks:
    image: quay.io/microcks/microcks-uber:latest-native
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - microksdata:/deployments/config
    labels:
      - com.centurylinklabs.watchtower.enable=true
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheusdata:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    expose:
      - 9090
    depends_on:
      - reverse-proxy
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_DEFAULT_INSTANCE_NAME=agriculture-api
      - GF_PATHS_CONFIG=/etc/grafana/provisioning/custom.ini
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
    expose:
      - 3000
    user: "104"
    depends_on:
      - prometheus
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host("grafana-agriculture.${{ SANDBOX_HOST }}")
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls.certresolver=myresolver
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped
volumes:
  letsencrypt:
  microksdata:
  prometheusdata: