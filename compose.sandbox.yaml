name: agriculture-sandbox
services:
  watchtower:
    image: containrrr/watchtower:latest
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true
  reverse-proxy: 
    image: traefik:latest
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${{ DOMAIN_REGISTER_EMAIL }}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - 80:80
      - 443:443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true
  api:
    image: poi9912/agriculture-api:latest
    environment:
      - host=localhost
        env=sb
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 2
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host("${{ SANDBOX_HOST }}"")
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=myresolver
      - com.centurylinklabs.watchtower.enable=true
  importer:
    image: poi9912/agriculture-mock-importer:latest
    depends_on:
      microcks:
        condition: service_started
  microcks:
    image: quay.io/microcks/microcks-uber:latest-native
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - microksdata:/deployments/config
    labels:
      - com.centurylinklabs.watchtower.enable=true
volumes:
  letsencrypt:
  microksdata: