name: agriculture-local
services:
  watchtower:
    image: containrrr/watchtower:latest
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true
  reverse-proxy: 
    image: traefik:latest
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      #- "--providers.docker.allowemptyservices=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.metrics.address=:8899"
      - "--metrics.prometheus.entryPoint=metrics"
    ports:
      - 80:80
      - 8080:8080
      - 8899:8899
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - com.centurylinklabs.watchtower.enable=true
  api:
    image: poi9912/agriculture-api:latest
    environment:
      - host=localhost
        env=sb
    restart: unless-stopped
    expose:
      - 3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host("api.localhost")
      - com.centurylinklabs.watchtower.enable=true
  importer:
    image: poi9912/agriculture-mock-importer:latest
    depends_on:
      microcks:
        condition: service_started
  microcks:
    image: quay.io/microcks/microcks-uber:latest-native
    restart: unless-stopped
    expose:
      - 8080
    volumes:
      - microcksdata:/deployments/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.microcks.rule=Host("mocks.localhost")
      - com.centurylinklabs.watchtower.enable=true
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheusdata:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    expose:
      - 9090
    depends_on:
      - reverse-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host("prometheus.localhost")
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
    expose:
      - 3000
    user: "104"
    depends_on:
      - prometheus
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host("grafana.localhost")
      - com.centurylinklabs.watchtower.enable=true
    restart: unless-stopped
volumes:
  microcksdata:
  prometheusdata: